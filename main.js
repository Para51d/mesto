(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function t(e,n,r,o,i,u){var a=e.likes,c=e.name,l=e.link,s=e._id,f=e.owner;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=c,this._link=l,this._cardId=s,this._likes=a,this._userId=u,this._templateElement=n,this._handleCardClick=r,this._handleLikeClick=o,this._handleDeleteClick=i,this._isOwner=f._id===u,this._isLiked=this._checkUserLike()}var n,r;return n=t,r=[{key:"_getTemplate",value:function(){return this._templateElement.querySelector(".card").cloneNode(!0)}},{key:"_handleLikeCard",value:function(){this._handleLikeClick(this._cardId,this._isLiked,this)}},{key:"_checkUserLike",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._userId}))}},{key:"_toggleLikeButtonState",value:function(t){t?this._likeButton.classList.add("card__button-like_active"):this._likeButton.classList.remove("card__button-like_active")}},{key:"checkLike",value:function(t){t&&(this._likes=t,this._isLiked=this._checkUserLike()),this._likeCounter.textContent=this._likes.length,this._toggleLikeButtonState(this._isLiked)}},{key:"blockLikeButton",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._likeButton.disabled=t}},{key:"handleDeleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListeners",value:function(){var t=this;this._imageElement.addEventListener("click",(function(){t._handleCardClick(t._imageElement)})),this._likeButton.addEventListener("click",(function(){t._handleLikeCard()})),this._isOwner&&this._buttonDelete.addEventListener("click",(function(){t._handleDeleteClick(t._cardId,t)}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".card__image"),this._imageElement.src=this._image,this._imageElement.alt=this._title,this._element.querySelector(".card__title").textContent=this._title,this._likeButton=this._element.querySelector(".card__button-like"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._buttonDelete=this._element.querySelector(".card__button-removal"),this._likeCounter.textContent="".concat(this._likes.length),this._isOwner||this._buttonDelete.remove(),this.checkLike(),this._setEventListeners(),this._element}}],r&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var e,n;return e=t,(n=[{key:"_getResponse",value:function(t){return t.ok?t.json():Promise.reject(t.status)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._getResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._getResponse)}},{key:"editUserInfo",value:function(t){var e=t.name,n=t.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:n})}).then(this._getResponse)}},{key:"addNewCard",value:function(t){var e=t.name,n=t.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:n})}).then(this._getResponse)}},{key:"changeUserAvatar",value:function(t){var e=t.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._getResponse)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._getResponse)}},{key:"_addLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this._headers}).then(this._getResponse)}},{key:"_removeLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this._headers}).then(this._getResponse)}},{key:"handleLike",value:function(t,e){return e?this._removeLike(t):this._addLike(t)}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),u={formSelector:".form",submitSelector:".form__save",inputSelector:".form__input",inputInvalidClass:"form__input_invalid",inputSectionSelector:".form__section",inputErrorClass:"form__input-error_active",inputErrorSelector:".form__input-error",disabledButtonClass:"form__save_inactive"},a=document.querySelector(".profile__edit-button"),c=document.querySelector(".profile__add-button"),l=document.querySelector(".profile__change-avatar"),s=document.querySelector(".form__avatar"),f=document.querySelector(".form__profile"),p=document.querySelector(".form__add-card"),y=document.querySelector("#item").content;function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,v(r.key),r)}}function m(t,e,n){return(e=v(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function v(t){var e=function(t,e){if("object"!==h(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===h(e)?e:String(e)}y.querySelector(".card__button-removal");var d=function(){function t(e,n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),m(this,"resetValidation",(function(){r._toggleButtonState(),r._inputList.forEach((function(t){t.classList.remove(r._inputInvalidClass),t.classList.remove(r._inputErrorClass),t.nextElementSibling.textContent=""}))})),m(this,"enableValidation",(function(){r._setEventListeners()})),this._inputSelector=e.inputSelector,this._submitSelector=e.submitSelector,this._disabledButtonClass=e.disabledButtonClass,this._inputInvalidClass=e.inputInvalidClass,this._inputErrorClass=e.inputErrorClass,this._inputErrorSelector=e.inputErrorSelector,this._inputSectionSelector=e.inputSectionSelector,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(e.inputSelector))}var e,n;return e=t,(n=[{key:"_showInputError",value:function(){var t=this._inputElement.closest(this._inputSectionSelector).querySelector(this._inputErrorSelector);this._inputElement.classList.add(this._inputInvalidClass),t.classList.add(this._inputErrorClass),t.textContent=this._inputElement.validationMessage}},{key:"_hideInputError",value:function(){var t=this._inputElement.closest(this._inputSectionSelector).querySelector(this._inputErrorSelector);this._inputElement.classList.remove(this._inputInvalidClass),t.classList.remove(this._inputErrorClass),t.textContent=""}},{key:"_isValid",value:function(t){this._inputElement.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_toggleButtonState",value:function(){var t=this._formElement.checkValidity();this._buttonElement.disabled=!t,this._buttonElement.classList.toggle(this._disabledButtonClass,!t)}},{key:"_setEventListeners",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._inputElement=e,t._isValid(),t._toggleButtonState()}))})),this._buttonElement=this._formElement.querySelector(this._submitSelector)}}])&&b(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}var g=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._container=document.querySelector(n)}var e,n;return e=t,n=[{key:"addItem",value:function(t){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this._container.prepend(t):this._container.append(t)}},{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}}],n&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function w(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,E(r.key),r)}}function E(t){var e=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===k(e)?e:String(e)}var O=function(){function t(e){var n,r,o,i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,o=function(t){"Escape"===t.key&&i.close()},(r=E(r="_handleEscClose"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this._popup=document.querySelector(e),this._keyHandler=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._keyHandler)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._keyHandler)}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__button-close"))&&t.close()}))}}])&&w(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===j(o)?o:String(o)),r)}var o}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=I(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},C.apply(this,arguments)}function P(t,e){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},P(t,e)}function I(t){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},I(t)}var B=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&P(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=I(r);if(o){var n=I(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===j(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._form=n._popup.querySelector(".form"),n._inputList=n._form.querySelectorAll(".form__input"),n._handleFormSubmit=e,n._submitButton=n._form.querySelector(".form__save"),n}return e=u,n=[{key:"_getInputValues",value:function(){var t=this;return this._formInputValues={},this._inputList.forEach((function(e){t._formInputValues[e.name]=e.value})),this._formInputValues}},{key:"setInputValues",value:function(t){this._inputList.forEach((function(e){e.value=t[e.name]}))}},{key:"close",value:function(){C(I(u.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var t=this;C(I(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues()),t.close()}))}},{key:"blockButton",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._submitButton.disabled=e,this._submitButton.textContent=t}}],n&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(O);function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function T(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=x(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},q.apply(this,arguments)}function U(t,e){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},U(t,e)}function x(t){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},x(t)}var V=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&U(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=x(r);if(o){var n=x(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===R(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._image=e._popup.querySelector(".popup__image"),e._imageFigcaption=e._popup.querySelector(".popup__figcaption"),e}return e=u,(n=[{key:"open",value:function(t,e){q(x(u.prototype),"open",this).call(this),this._image.src=e,this._image.alt=t,this._imageFigcaption.textContent=t}}])&&T(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(O);function D(t){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},D(t)}function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==D(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=J(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},N.apply(this,arguments)}function H(t,e){return H=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},H(t,e)}function F(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function J(t){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},J(t)}var G,M=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&H(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=J(r);if(o){var n=J(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===D(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return F(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._form=e._popup.querySelector(".form"),e._submitButton=e._form.querySelector(".form__save"),e._submitCallback=e._submitCallback.bind(F(e)),e}return e=u,n=[{key:"handleSubmit",value:function(t){this._handleSubmit=t}},{key:"_submitCallback",value:function(t){t.preventDefault(),this._handleSubmit()}},{key:"setEventListeners",value:function(){N(J(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitCallback)}},{key:"blockButton",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._submitButton.disabled=e,this._submitButton.textContent=t}}],n&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(O);function z(t){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},z(t)}function $(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==z(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===z(o)?o:String(o)),r)}var o}function K(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var Q=new(function(){function t(e){var n=e.nameSelector,r=e.aboutSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(o)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about;this._name.textContent=e,this._about.textContent=n}},{key:"setUserAvatar",value:function(t){var e=t.avatar;this._avatar.src=e}}])&&$(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}())({nameSelector:".profile__username",aboutSelector:".profile__text",avatarSelector:".profile__avatar"}),W=new i({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-65",headers:{authorization:"bc0e8a37-d4e2-49ec-b42f-132165b9c35f","Content-Type":"application/json"}}),X=function(t,e,n){n.blockLikeButton(),W.handleLike(t,e).then((function(t){n.checkLike(t.likes)})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){return n.blockLikeButton(!1)}))},Y=function(t,e){nt.handleSubmit((function(){return function(t,e){nt.blockButton("Удаление..."),W.deleteCard(t).then((function(){e.handleDeleteCard(),nt.close()})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){return nt.blockButton("Да",!1)}))}(t,e)})),nt.open()},Z=function(t){rt.open(t)},tt=function(t,e){var r=new n(t,y,Z,X,Y,G).generateCard();et.addItem(r,e)},et=new g(tt,".places"),nt=new M(".popup_type_delete-card");nt.setEventListeners();var rt=new V(".popup_type_image");rt.setEventListeners();var ot=new B(".popup_type_add-place",(function(t){ot.blockButton("Создание..."),W.addNewCard(t).then((function(t){tt(t,!0),ot.close()})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){return ot.blockButton("Создать",!1)}))}));ot.setEventListeners();var it=new B(".popup_type_profile",(function(t){it.blockButton("Сохранение..."),W.editUserInfo(t).then((function(t){Q.setUserInfo(t),it.close()})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){return it.blockButton("Сохранить",!1)}))}));it.setEventListeners();var ut=new B(".popup_type_change-avatar",(function(t){ut.blockButton("Сохранение..."),W.changeUserAvatar(t).then((function(t){Q.setUserAvatar(t),ut.close()})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){return ut.blockButton("Сохранить",!1)}))}));ut.setEventListeners();var at=new d(u,f);at.enableValidation();var ct=new d(u,p);ct.enableValidation();var lt=new d(u,s);lt.enableValidation(),Promise.all([W.getUserInfo(),W.getInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,a=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(a.push(r.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,n)||function(t,e){if(t){if("string"==typeof t)return K(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?K(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];G=o._id,Q.setUserInfo(o),Q.setUserAvatar(o),et.renderItems(i)})).catch((function(t){return console.log("Ошибка: ".concat(t))})),l.addEventListener("click",(function(){lt.resetValidation(),ut.open()})),a.addEventListener("click",(function(){var t=Q.getUserInfo(),e=t.name,n=t.about;it.setInputValues({name:e,about:n}),at.resetValidation(),it.open()})),c.addEventListener("click",(function(){ct.resetValidation(),ot.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,